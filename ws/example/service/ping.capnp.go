// Code generated by capnpc-go.

package service

// AUTO GENERATED - DO NOT EDIT

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Pinger struct{ Client capnp.Client }

// Pinger_TypeID is the unique identifier for the type Pinger.
const Pinger_TypeID = 0xaff2e764f9a02b0a

func (c Pinger) Ping(ctx context.Context, params func(Pinger_ping_Params) error, opts ...capnp.CallOption) Pinger_ping_Results_Promise {
	if c.Client == nil {
		return Pinger_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaff2e764f9a02b0a,
			MethodID:      0,
			InterfaceName: "ping.capnp:Pinger",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Pinger_ping_Params{Struct: s}) }
	}
	return Pinger_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Pinger_Server interface {
	Ping(Pinger_ping) error
}

func Pinger_ServerToClient(s Pinger_Server) Pinger {
	c, _ := s.(server.Closer)
	return Pinger{Client: server.New(Pinger_Methods(nil, s), c)}
}

func Pinger_Methods(methods []server.Method, s Pinger_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaff2e764f9a02b0a,
			MethodID:      0,
			InterfaceName: "ping.capnp:Pinger",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Pinger_ping{c, opts, Pinger_ping_Params{Struct: p}, Pinger_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Pinger_ping holds the arguments for a server call to Pinger.ping.
type Pinger_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Pinger_ping_Params
	Results Pinger_ping_Results
}

type Pinger_ping_Params struct{ capnp.Struct }

// Pinger_ping_Params_TypeID is the unique identifier for the type Pinger_ping_Params.
const Pinger_ping_Params_TypeID = 0xd72166a6ea78ed03

func NewPinger_ping_Params(s *capnp.Segment) (Pinger_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Pinger_ping_Params{st}, err
}

func NewRootPinger_ping_Params(s *capnp.Segment) (Pinger_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Pinger_ping_Params{st}, err
}

func ReadRootPinger_ping_Params(msg *capnp.Message) (Pinger_ping_Params, error) {
	root, err := msg.RootPtr()
	return Pinger_ping_Params{root.Struct()}, err
}

func (s Pinger_ping_Params) String() string {
	str, _ := text.Marshal(0xd72166a6ea78ed03, s.Struct)
	return str
}

func (s Pinger_ping_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Pinger_ping_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Pinger_ping_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Pinger_ping_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// Pinger_ping_Params_List is a list of Pinger_ping_Params.
type Pinger_ping_Params_List struct{ capnp.List }

// NewPinger_ping_Params creates a new list of Pinger_ping_Params.
func NewPinger_ping_Params_List(s *capnp.Segment, sz int32) (Pinger_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Pinger_ping_Params_List{l}, err
}

func (s Pinger_ping_Params_List) At(i int) Pinger_ping_Params {
	return Pinger_ping_Params{s.List.Struct(i)}
}

func (s Pinger_ping_Params_List) Set(i int, v Pinger_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

// Pinger_ping_Params_Promise is a wrapper for a Pinger_ping_Params promised by a client call.
type Pinger_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Pinger_ping_Params_Promise) Struct() (Pinger_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Pinger_ping_Params{s}, err
}

type Pinger_ping_Results struct{ capnp.Struct }

// Pinger_ping_Results_TypeID is the unique identifier for the type Pinger_ping_Results.
const Pinger_ping_Results_TypeID = 0xa2ea0f9d689486db

func NewPinger_ping_Results(s *capnp.Segment) (Pinger_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Pinger_ping_Results{st}, err
}

func NewRootPinger_ping_Results(s *capnp.Segment) (Pinger_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Pinger_ping_Results{st}, err
}

func ReadRootPinger_ping_Results(msg *capnp.Message) (Pinger_ping_Results, error) {
	root, err := msg.RootPtr()
	return Pinger_ping_Results{root.Struct()}, err
}

func (s Pinger_ping_Results) String() string {
	str, _ := text.Marshal(0xa2ea0f9d689486db, s.Struct)
	return str
}

func (s Pinger_ping_Results) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Pinger_ping_Results) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Pinger_ping_Results) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Pinger_ping_Results) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// Pinger_ping_Results_List is a list of Pinger_ping_Results.
type Pinger_ping_Results_List struct{ capnp.List }

// NewPinger_ping_Results creates a new list of Pinger_ping_Results.
func NewPinger_ping_Results_List(s *capnp.Segment, sz int32) (Pinger_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Pinger_ping_Results_List{l}, err
}

func (s Pinger_ping_Results_List) At(i int) Pinger_ping_Results {
	return Pinger_ping_Results{s.List.Struct(i)}
}

func (s Pinger_ping_Results_List) Set(i int, v Pinger_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

// Pinger_ping_Results_Promise is a wrapper for a Pinger_ping_Results promised by a client call.
type Pinger_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Pinger_ping_Results_Promise) Struct() (Pinger_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Pinger_ping_Results{s}, err
}

const schema_a69e0e7963207685 = "x\xda\x12\xe8t`2d\xcdgb`\x08\x94ae" +
	"\xfb\x7f\xbbmJ\xc6\\\xfeW\x8b\x18\x04\x85\x18\x19\x18" +
	"X\x19\xd9\x19\x18\x84e\x19\x7f10\x0a+2\xda3" +
	"0\xfe\xe7\xd2^\xf03\xe5\xf9\xa7\xf5\x0c\x82\xdc\xcc\xff" +
	"[\xcb\x14\x92+\xf9\xe6-c``\x14vd\x9c$" +
	"\xec\x09V\xee\xca\xe8.\x9c\x0bb\xfdg~[\xf1j" +
	"Y\x9a\xe2ud\xc3B\x19?10\x0aG2\xda3" +
	"\xe8\xfe/\xc8\xccK\xd7KN,`\xca+\xb0\x0a\xc8" +
	"\xccKO-\xd2\x03\x09\xa9\x04\xd9\xa7\x16\x97\xe6\x94\x14" +
	"\x07\xb20\xb300\xb0020\x08\xf2*10\x04" +
	"r03\x06\x8a01\xb2\xe7\x16\xa73\xf2001" +
	"\xf200\xc2\xcd`\x84\x99\xc1X\x14\xc0\xc8\x18\xc8\xc2" +
	"\xcc\x8a\xe4\x00F\x98\xb7\x04\x05\xb5\x18\x98\x04Y\xd9\xf9" +
	"A\xda\x1c\x18\x03\x18\x19q:\"@>\xb1(1\x97" +
	"\x187\x00\x02\x00\x00\xff\xff\xa9\x0eQ\x05"

func init() {
	schemas.Register(schema_a69e0e7963207685,
		0xa2ea0f9d689486db,
		0xaff2e764f9a02b0a,
		0xd72166a6ea78ed03)
}
